# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
trigger:
- master
- azure-pipelines

jobs:
- job: job_32_bit
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'
  - bash: |
      npm set npm_config_arch ia32 -g
      npm set npm_config_target_arch ia32 -g
      npm set npm_config_runtime electron -g
      npm set npm_config_build_from_source true -g
      export npm_config_target=1.2.3
      export npm_config_arch=ia32
      export npm_config_target_arch=ia32
      export npm_config_runtime=electron
      export npm_config_build_from_source=true
      export npm_config_disturl=https://atom.io/download/electron
      export win_delay_load_hook=true
      HOME=~/.electron-gyp npm install
      npm install --arch=ia32 electron-prebuilt -g
      npm install --arch=ia32 electron-builder -g
      npm install --arch=ia32 electron-rebuild -g
      npm install --arch=ia32
      rm -rf node_modules/prebuild-install
      electron-rebuild -f --arch=ia32
      electron-builder --win --ia32
      ls ./dist
      echo Electron builder complete
      echo $(Build.ArtifactStagingDirectory)
    displayName: 'npm install and build 32-bit'

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)\dist'
      contents: '*.exe'
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: win32

  - task: cURLUploader@2
    inputs:
      files: dist\*.exe
      URL: scp://home.noisymime.org
      authType: userAndPass
      username: josh
      password: $(sftp_pwd)
    displayName: 'Copy exe to server'
  
- job: job_64_bit
  dependsOn: job_32_bit
  condition: succeeded()
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'
  - bash: |
      npm cache clean --force
      rm -rf node_modules/
      npm set npm_config_arch x64
      npm install
      npm install electron-builder -g
      electron-builder --win --x64
    displayName: 'npm install and build 64-bit'